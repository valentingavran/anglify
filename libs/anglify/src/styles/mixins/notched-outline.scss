@mixin notched-outline($border-radius: 4px, $transition-duration) {
  $border-style: solid;
  $start-width: var(--anglify-notched-outline-start-width, 0);
  $border-color: var(--anglify-notched-outline-border-color, #000);
  $border-width: var(--anglify-notched-outline-border-width, 1px);
  $notch-width: var(--anglify-notched-outline-notch-width, 100%);
  $padding: var(--anglify-notched-outline-padding, 4px);
  $font-size: var(--anglify-notched-outline-font-size, 12px);
  $transition-timing-function: var(--anglify-notched-outline-transition-timing-function, cubic-bezier(0.25, 0.8, 0.5, 1));

  position: absolute;
  display: flex;
  width: 100%;
  height: 100%;
  pointer-events: none;
  user-select: none;

  .start {
    width: calc(#{$start-width} - #{$padding});
    box-sizing: border-box;
    flex-shrink: 0;
    border-width: $border-width;
    border-style: $border-style none $border-style $border-style;
    border-color: $border-color;
    border-bottom-left-radius: $border-radius;
    border-top-left-radius: $border-radius;
  }

  .notch {
    position: relative;
    display: block;
    max-width: calc(100% - #{$start-width} - #{$start-width});
    box-sizing: border-box;
    padding-right: $padding;
    padding-left: $padding;
    border-bottom: $border-width $border-style $border-color;
    font-size: 12px;
    white-space: nowrap;

    /* This pseudo element is responsible for the notch border width animation */
    &::after {
      position: absolute;
      top: 0;
      right: 0;
      width: $notch-width;
      border-top: $border-width $border-style $border-color;
      content: '';
      transition: width $transition-duration $transition-timing-function;
    }
  }

  .end {
    min-width: $start-width;
    box-sizing: border-box;
    flex: 1;
    border-width: $border-width;
    border-style: $border-style $border-style $border-style none;
    border-color: $border-color;
    border-bottom-right-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }
}
