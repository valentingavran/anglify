@use 'variables' as *;
@use '../../styles/mixins/reset-state' as *;

:host {
  @include reset-state;

  display: inline-flex;
  min-height: $chip-height;
  align-items: center;
  padding: $chip-padding;
  border-radius: $chip-border-radius;
  color: $chip-inactive-label-color;
  cursor: $chip-cursor;
  font: $chip-font;
  letter-spacing: $chip-letter-spacing;
  text-decoration: $chip-text-decoration;
  text-transform: $chip-text-transform;
  user-select: none;

  &:hover {
    --state-container-color: var(--state-inactive-color);
    --state-container-opacity: var(--state-hover-opacity);
  }

  &:focus-visible {
    --state-container-color: var(--state-inactive-color);
    --state-container-opacity: var(--state-focus-opacity);
  }

  &.filter {
    .prepend {
      width: 0;
      opacity: 0;
      transform: translate(calc(-1 * $chip-filter-prepend-width), 0);
      transition: $chip-filter-transition-speed;
    }

    &.active {
      .prepend {
        width: $chip-filter-prepend-width;
        opacity: 1;
        transform: translate(0, 0);
      }
    }
  }

  &.active {
    --state-container-color: var(--state-active-color);
    --state-container-opacity: var(--state-focus-opacity);

    color: $chip-active-label-color;
  }

  &.filled {
    background-color: $chip-background-color;
  }

  &.outlined {
    border: $chip-outlined-border;
  }

  &.has-left-icon {
    padding-inline-start: $chip-inline-padding-start-dense;
  }

  &.has-right-icon {
    padding-inline-end: $chip-inline-padding-end-dense;
  }
}
