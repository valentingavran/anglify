@use 'variables' as *;
@use '../../styles/mixins/reset-state' as *;

:host {
  @include reset-state;

  display: block;
  user-select: none;

  .before {
    flex-flow: row-reverse;
  }

  label {
    position: relative;
    display: flex;
  }

  .container {
    position: relative;
    display: flex;
    overflow: visible;
    width: $checkbox-ripple-inner-width;
    height: $checkbox-ripple-inner-height;
  }

  .state-container {
    position: absolute;
    width: $checkbox-ripple-width;
    height: $checkbox-ripple-height;
    margin: $checkbox-ripple-margin;
    border-radius: $checkbox-ripple-border-radius;
  }

  .check-box-effect {
    position: relative;
    display: inline-flex;
    width: $checkbox-width;
    height: $checkbox-height;
    border-width: $checkbox-border-width;
    border-style: solid;
    margin: auto;
    border-radius: $checkbox-border-radius;
    pointer-events: none;

    &::after {
      position: absolute;
      top: $checkbox-icon-after-top-position;
      left: $checkbox-icon-after-left-position;
      width: 0;
      height: $checkbox-icon-after-height;
      background: $checkbox-icon-color;
      border-radius: 3px;
      content: '';
      transform: rotate(305deg);
      transform-origin: 0% 0%;
      transition: width 50ms ease;
    }

    &::before {
      position: absolute;
      top: $checkbox-icon-before-top-position;
      left: $checkbox-icon-before-left-position;
      width: 0;
      height: $checkbox-icon-before-height;
      background: $checkbox-icon-color;
      border-radius: 3px;
      content: '';
      transform: rotate(45deg);
      transform-origin: 0% 0%;
      transition: width 50ms ease 50ms;
    }
  }

  .checkbox-custom-icons {
    width: $checkbox-custom-icon-size;
    height: $checkbox-custom-icon-size;
    pointer-events: none;
  }

  .checkbox-label {
    display: flex;
    align-items: center;
    padding: $checkbox-label-padding;
    font: $checkbox-label-font;
    letter-spacing: $checkbox-label-letter-spacing;
    text-transform: $checkbox-label-text-transform;
  }

  &:not(.anglify-checkbox-disabled) {
    .state-container,
    .checkbox-label {
      cursor: pointer;
    }
  }

  &.anglify-checkbox-disabled {
    .checkbox-label {
      color: $checkbox-disabled-color;
    }

    .check-box-effect {
      border-color: $checkbox-disabled-color !important;
    }
  }

  &.anglify-checkbox-checked.anglify-checkbox-disabled {
    --anglify-icon-color: #{$checkbox-disabled-color};

    .check-box-effect {
      border-color: transparent !important;
      background-color: $checkbox-disabled-color;

      &::before {
        width: $checkbox-icon-before-width;
        background: $checkbox-checked-icon-color;
        transition: $checkbox-checked-icon-transition-speed;
      }

      &::after {
        width: $checkbox-icon-after-width;
        background: $checkbox-checked-icon-color;
        transition: $checkbox-checked-icon-transition-speed;
      }
    }
  }

  &.anglify-checkbox-checked:not(.anglify-checkbox-disabled) {
    --anglify-icon-color: #{$checkbox-checked-color};

    .check-box-effect {
      border-color: $checkbox-checked-border-color;
      background-color: $checkbox-checked-color;

      &::before {
        width: $checkbox-icon-before-width;
        background: $checkbox-checked-icon-color;
        transition: $checkbox-checked-icon-transition-speed;
      }

      &::after {
        width: $checkbox-icon-after-width;
        background: $checkbox-checked-icon-color;
        transition: $checkbox-checked-icon-transition-speed;
      }
    }

    .state-container:focus-visible {
      --state-container-color: var(--state-active-color);
      --state-container-opacity: var(--state-focus-opacity);
    }

    .state-container:hover {
      --state-container-color: var(--state-active-color);
      --state-container-opacity: var(--state-hover-opacity);
    }
  }

  // Two separate not selectors needed
  /* stylelint-disable-next-line selector-not-notation */
  &:not(.anglify-checkbox-checked):not(.anglify-checkbox-disabled) {
    .check-box-effect {
      border-color: $checkbox-border-color;
    }

    .state-container:focus-visible {
      --state-container-color: var(--state-inactive-color);
      --state-container-opacity: var(--state-focus-opacity);
    }

    .state-container:hover {
      --state-container-color: var(--state-inactive-color);
      --state-container-opacity: var(--state-hover-opacity);
    }
  }
}
