@use 'variables' as *;

:host {
  table {
    display: grid;
    overflow: auto;
    box-sizing: border-box;
    border: $data-table-border;
    border-radius: $data-table-border-radius;
    grid-template-columns: var(--anglify-data-table-header-widths); // property programmatically set in code
  }

  thead,
  tr {
    display: contents;
  }

  th,
  td {
    display: flex;
    box-sizing: border-box;
    align-items: center;
    border-bottom: $data-table-border;
    padding-inline-end: $data-table-column-padding;
    padding-inline-start: $data-table-column-padding;

    span {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    &.align-start {
      justify-content: flex-start;
    }

    &.align-center {
      justify-content: center;
    }

    &.align-end {
      justify-content: flex-end;
    }
  }

  th {
    min-height: $data-table-min-header-height;
    font: $data-table-header-font;
    font-weight: bold;
    letter-spacing: $data-table-header-letter-spacing;
    text-transform: $data-table-header-text-transform;
    user-select: none;

    &.sortable {
      cursor: pointer;
    }

    .sort-icon {
      padding-inline-start: 4px;
    }

    .sort-icon-preview {
      visibility: hidden;
    }

    &:hover {
      .sort-icon-preview {
        visibility: visible;
      }
    }

    .sort-priority {
      min-width: 1rem;
      padding: 2px;
      background-color: $data-table-sort-priority-background-color;
      border-radius: 1rem;
      font: $data-table-sort-priority-font;
      letter-spacing: $data-table-sort-priority-letter-spacing;
      text-transform: $data-table-sort-priority-text-transform;
    }
  }

  anglify-progress-linear {
    grid-column: 1 / -1;
  }

  .loading-state {
    padding: 2rem;
    color: var(--color-on-surface-medium-emphasis);
    grid-column: 1 / -1;
    text-align: center;
  }

  tr {
    font: $data-table-row-font;
    letter-spacing: $data-table-row-letter-spacing;
    text-transform: $data-table-row-text-transform;

    td {
      min-height: $data-table-min-row-height;
    }

    &:hover {
      td:not(.expanded-item) {
        background-color: $data-table-row-hover-background-color;
      }
    }

    .expanded-item {
      box-shadow: $data-table-expanded-item-box-shadow;
      grid-column: 1 / -1;
    }
  }

  tfoot {
    display: flex;
    height: $data-table-default-footer-height;
    align-items: center;
    justify-content: flex-end;
    padding: $data-table-default-footer-padding;
    gap: $data-table-default-footer-gap;
    grid-column: 1 / -1;

    .pagination {
      font: $data-table-pagination-font;
      letter-spacing: $data-table-pagination-letter-spacing;
      text-transform: $data-table-pagination-text-transform;
    }
  }
}
