@use 'variables' as *;

:host {
  display: block;

  .before {
    flex-flow: row-reverse;
  }

  label {
    display: flex;
    position: relative;

    .container {
      width: $radio-button-ripple-inner-width;
      height: $radio-button-ripple-inner-height;
      display: flex;
      overflow: visible !important;
      position: relative;

      .state-container {
        height: $radio-button-ripple-height;
        width: $radio-button-ripple-width;
        margin: $radio-button-ripple-margin;
        border-radius: $radio-button-ripple-border-radius;
        position: absolute;
      }

      .radio-button-effect {
        display: inline-flex;
        position: relative;
        box-sizing: border-box;
        width: $radio-button-width;
        height: $radio-button-height;
        border-width: $radio-button-border-width;
        border-style: solid;
        border-color: $radio-button-border-color;
        border-radius: $radio-button-border-radius;
        margin: auto;
        align-content: center;
        pointer-events: none;

        .radio-button-effect-dot {
          height: $radio-button-dot-height;
          width: $radio-button-dot-width;
          background-color: transparent;
          border-radius: 50%;
          visibility: hidden;
          position: relative;
          margin: auto;
          transition: transform 0.2s linear;
          transform: scale(0);
          display: inline-block;
        }
      }
    }

    .label {
      display: flex;
      font: $radio-button-label-font;
      letter-spacing: $radio-button-label-letter-spacing;
      text-transform: $radio-button-label-text-transform;
      align-items: center;
      padding: $radio-button-label-margin;
    }
  }

  input {
    opacity: 0;
    position: absolute;
    pointer-events: none;
    user-select: none;
  }

  input:not(:disabled) {
    & ~ .label,
    & ~ .container .state-container {
      cursor: pointer;
    }
  }

  input:disabled {
    & ~ .container {
      .radio-button-effect {
        border-color: $radio-button-disabled-color;
        border-style: solid;
        border-width: $radio-button-border-width;
      }

      .radio-button-effect-dot {
        transform: scale(1);
        background-color: $radio-button-disabled-color;
      }
    }

    & ~ .label {
      color: $radio-button-disabled-color;
    }
  }

  input:checked:not(:disabled) {
    & ~ .container {
      .radio-button-effect {
        border-color: $radio-button-checked-border-color;

        .radio-button-effect-dot {
          visibility: visible;
          transform: scale(1);
          background: $radio-button-checked-dot-color;
        }
      }
    }

    &:hover {
      ~ .container {
        --state-container-color: #{$radio-button-hover-state-active-color};
      }
    }

    &:focus-visible {
      ~ .container {
        --state-container-color: #{$radio-button-focus-state-active-color};
      }
    }
  }

  /* stylelint-disable-next-line no-descending-specificity */
  input:not(:checked):not(:disabled) {
    &:hover {
      & ~ .container {
        --state-container-color: #{$radio-button-hover-state-inactive-color};
      }
    }

    &:focus-visible {
      & ~ .container {
        --state-container-color: #{$radio-button-focus-state-inactive-color};
      }
    }
  }
}
