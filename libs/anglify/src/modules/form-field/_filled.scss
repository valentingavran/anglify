@use 'variables' as *;

:host-context(.form-field-type-filled) {
  --anglify-icon-inactive-color: #{$form-field-filled-icon-color};
  padding-top: calc((#{$form-field-font-size} * #{$form-field-label-scale-focused}) / 2);

  .form-field-container {
    background-color: $form-field-filled-background;
    border-radius: $form-field-filled-border-radius;
    padding-inline-start: $form-field-filled-padding-start;
    padding-inline-end: $form-field-filled-padding-start;

    label {
      .label {
        transition-duration: $transition-duration;
        transition-property: max-width, transform, width;
        transition-timing-function: $form-field-transition-timing-function;
        transform-origin: left;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
        font-size: $form-field-font-size;
      }

      ::ng-deep {
        input,
        textarea {
          padding-block-start: $form-field-filled-padding-top;
          padding-block-end: $form-field-filled-padding-bottom;
          color: $form-field-filled-text-color;
        }
      }
    }

    /* This pseudo element contains the inactive bottom border */
    &:before {
      content: '';
      position: absolute;
      width: 0;
      bottom: 0;
      border-bottom: 1px solid $form-field-filled-border-color;
    }

    /* This pseudo element contains the focused bottom border. It animates on focus from the center to the edges */
    &:after {
      content: '';
      position: absolute;
      width: 0;
      background-color: $form-field-filled-border-color-focused;
      transition: width $transition-duration $form-field-transition-timing-function;
      bottom: 0;
      height: 2px;
      justify-self: center;
    }
  }

  &.focused {
    --anglify-icon-inactive-color: #{$form-field-filled-icon-color-focused};

    .form-field-container {
      &:before {
        width: 100%;
      }

      &:after {
        width: 100%;
        height: 2px;
      }

      .label {
        color: $form-field-filled-label-color-focused;
      }

      ::ng-deep {
        input,
        textarea {
          color: $form-field-filled-text-color-focused;

          &::placeholder {
            color: $form-field-filled-placeholder-color-focused;
          }
        }
      }
    }
  }

  &:not(.focused):not(.disabled) {
    .form-field-container {
      &:after {
        background-color: $form-field-filled-border-color;
      }

      &:hover {
        &:before {
          width: 100%;
        }

        &:after {
          width: 100%;
          height: 2px;
        }
      }

      .label {
        color: $form-field-filled-label-color;
      }
    }
  }

  &.persistent-placeholder,
  &.floating {
    &:not(.focused):not(.disabled) {
      .form-field-container {
        ::ng-deep {
          input,
          textarea {
            &::placeholder {
              color: $form-field-filled-placeholder-color;
            }
          }
        }
      }
    }
  }

  &.focused,
  &.persistent-placeholder,
  &.floating {
    .label {
      transform: translateY(calc((#{$form-field-line-height} - #{$form-field-filled-padding-bottom}) * -1))
        scale($form-field-label-scale-focused);
      max-width: calc(100% / #{$form-field-label-scale-focused}) !important;
      width: calc(100% / #{$form-field-label-scale-focused}) !important;
    }
  }

  &:not(.has-label) {
    .form-field-container {
      ::ng-deep {
        input,
        textarea {
          padding-block-start: 14px !important;
          padding-block-end: 14px !important;
        }
      }
    }
  }

  &.disabled {
    --anglify-icon-inactive-color: #{$form-field-filled-icon-color-disabled};

    ::ng-deep {
      input,
      textarea {
        color: $form-field-filled-text-color-disabled !important;
      }
    }

    .form-field-container {
      color: $form-field-filled-label-color-disabled !important;

      &:before {
        border-bottom-style: dashed;
      }
    }

    &.persistent-placeholder {
      .form-field-container {
        ::ng-deep {
          input,
          textarea {
            &::placeholder {
              color: $form-field-filled-placeholder-color-disabled;
            }
          }
        }
      }
    }
  }

  &.error {
    .label,
    .details .hint {
      color: $form-field-filled-error-color !important;
    }

    .form-field-container {
      &:before {
        border-color: $form-field-filled-error-color;
      }

      &:after {
        background-color: $form-field-filled-error-color;
      }
    }
  }

  &.dense:not(.has-label) {
    .form-field-container {
      padding-inline-start: $form-field-filled-padding-start-dense;
      padding-inline-end: $form-field-filled-padding-start-dense;

      .form-field-border {
        --anglify-notched-outline-start-width: #{$form-field-filled-padding-start-dense};
      }

      ::ng-deep {
        input,
        textarea {
          padding-block-start: 10px !important;
          padding-block-end: 10px !important;
        }
      }
    }
  }
}
