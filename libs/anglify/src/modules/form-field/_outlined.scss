@use 'variables' as *;
@use '../../styles/mixins/notched-outline' as *;

:host-context(.form-field-type-outlined) {
  --anglify-icon-inactive-color: #{$form-field-outlined-icon-color};

  padding-top: calc((#{$form-field-font-size} * #{$form-field-label-scale-focused}) / 2);

  .form-field-container {
    background-color: $form-field-outlined-background;
    padding-inline-end: $form-field-outlined-padding-start;
    padding-inline-start: $form-field-outlined-padding-start;

    ::ng-deep {
      input,
      textarea {
        padding-block-end: $form-field-outlined-padding-bottom;
        padding-block-start: $form-field-outlined-padding-top;
      }
    }

    .form-field-border {
      @include notched-outline($form-field-outlined-border-radius, $transition-duration);

      --anglify-notched-outline-border-color: #{$form-field-outlined-border-color};
      --anglify-notched-outline-start-width: #{$form-field-outlined-padding-start};

      .notch * {
        display: block;
        font-size: calc(#{$form-field-font-size} * #{$form-field-label-scale-focused});
        transform: translateY(-50%);
        visibility: hidden;
      }
    }

    .label {
      overflow: hidden;
      max-width: 100%;
      font-size: $form-field-font-size;
      text-overflow: ellipsis;
      transform-origin: left;
      transition-duration: $transition-duration;
      transition-property: transform, max-width, margin-inline-start, width;
      transition-timing-function: $form-field-transition-timing-function;
      white-space: nowrap;
    }
  }

  &.error {
    .label,
    .details .hint {
      color: $form-field-outlined-error-color !important;
    }

    .form-field-container .form-field-border {
      --anglify-notched-outline-border-color: #{$form-field-outlined-error-color};
    }
  }

  &.focused {
    --anglify-icon-inactive-color: #{$form-field-outlined-icon-color-focused};

    .form-field-container {
      background-color: $form-field-outlined-background-focused;

      .form-field-border {
        --anglify-notched-outline-border-width: 2px;
        --anglify-notched-outline-border-color: #{$form-field-outlined-border-color-focused};
      }

      ::ng-deep {
        input,
        textarea {
          color: $form-field-outlined-text-color-focused;

          &::placeholder {
            color: $form-field-outlined-placeholder-color-focused;
          }
        }
      }

      .label {
        color: $form-field-outlined-label-color-focused;

        --anglify-icon-inactive-color: #{$form-field-outlined-label-color-focused};
      }
    }
  }

  &:not(.has-label) {
    --anglify-notched-outline-padding: 0;

    .notch {
      width: 0 !important;
    }
  }

  &.focused,
  &.persistent-placeholder,
  &.floating {
    .form-field-container {
      .form-field-border {
        --anglify-notched-outline-notch-width: 0;

        .notch {
          width: auto;
        }
      }

      .label {
        $translate-y: calc(
          (#{$form-field-line-height} + #{$form-field-outlined-padding-bottom} + #{$form-field-outlined-padding-top}) / 2 * -1
        );

        width: calc(100% / #{$form-field-label-scale-focused});
        max-width: calc(100% / #{$form-field-label-scale-focused});
        grid-column: 1 / 3;
        grid-row: 1;
        transform: translateY($translate-y) scale($form-field-label-scale-focused);
      }
    }
  }

  &.dense {
    &.focused,
    &.persistent-placeholder,
    &.floating {
      .form-field-container .label {
        $translate-y: calc(
          (#{$form-field-line-height} + #{$form-field-outlined-padding-bottom-dense} + #{$form-field-outlined-padding-top-dense}) / 2 * -1
        );

        transform: translateY($translate-y) scale($form-field-label-scale-focused);
      }
    }

    .form-field-container {
      padding-inline-end: $form-field-outlined-padding-start-dense;
      padding-inline-start: $form-field-outlined-padding-start-dense;

      .form-field-border {
        --anglify-notched-outline-start-width: #{$form-field-outlined-padding-start-dense};
      }

      ::ng-deep {
        input,
        textarea {
          padding-block-end: $form-field-outlined-padding-bottom-dense;
          padding-block-start: $form-field-outlined-padding-top-dense;
        }
      }
    }
  }

  &:not(.focused):not(.disabled) {
    .form-field-container {
      ::ng-deep {
        input,
        textarea {
          color: $form-field-outlined-text-color;
        }
      }

      .label {
        color: $form-field-outlined-label-color;

        --anglify-icon-inactive-color: $form-field-outlined-label-color;
      }

      &:hover {
        background-color: $form-field-outlined-background-hovered;

        .form-field-border {
          --anglify-notched-outline-border-color: #{$form-field-outlined-border-color-hovered};
        }
      }
    }
  }

  &.persistent-placeholder,
  &.floating {
    &:not(.focused):not(.disabled) {
      .form-field-container {
        ::ng-deep {
          input,
          textarea {
            &::placeholder {
              color: $form-field-outlined-placeholder-color;
            }
          }
        }
      }
    }
  }

  /* stylelint-disable no-descending-specificity */
  &.disabled {
    --anglify-icon-inactive-color: #{$form-field-outlined-icon-color-disabled};

    ::ng-deep {
      input,
      textarea {
        color: $form-field-outlined-text-color-disabled;
      }
    }

    .form-field-container {
      color: $form-field-outlined-label-color-disabled;
    }

    &.persistent-placeholder {
      .form-field-container {
        ::ng-deep {
          input,
          textarea {
            &::placeholder {
              color: $form-field-outlined-placeholder-color-disabled;
            }
          }
        }
      }
    }
  }
  /* stylelint-enable no-descending-specificity */
}
